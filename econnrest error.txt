node:events:371
      throw er; // Unhandled 'error' event
      ^

AudioPlayerError: aborted
    at connResetException (node:internal/errors:691:14)
    at TLSSocket.socketCloseListener (node:_http_client:407:19)
    at TLSSocket.emit (node:events:406:35)
    at node:net:672:12
    at TCP.done (node:_tls_wrap:580:7)
Emitted 'error' event on AudioPlayer instance at:
    at OggDemuxer.onStreamError (C:\Users\choos\Documents\Dicord bots\Smoothy 1.2\node_modules\@discordjs\voice\dist\audio\AudioPlayer.js:213:22)
    at Object.onceWrapper (node:events:514:26)
    at OggDemuxer.emit (node:events:406:35)
    at emitErrorNT (node:internal/streams/destroy:157:8)
    at emitErrorCloseNT (node:internal/streams/destroy:122:3)
    at processTicksAndRejections (node:internal/process/task_queues:83:21) {
  resource: <ref *8> AudioResource {
    playbackDuration: 140720,
    started: true,
    silenceRemaining: -1,
    edges: [
      <ref *1> {
        type: 'ffmpeg ogg',
        to: Node {
          edges: [ [Object], [Object], [Object] ],
          type: 'ogg/opus'
        },
        cost: 2,
        transformer: [Function: transformer],
        from: Node { edges: [ [Object], [Circular *1] ], type: 'arbitrary' }
      },
      <ref *2> {
        type: 'ogg/opus demuxer',
        to: Node { edges: [ [Object] ], type: 'opus' },
        cost: 1,
        transformer: [Function: transformer],
        from: Node {
          edges: [ [Circular *2], [Object], [Object] ],
          type: 'ogg/opus'
        }
      }
    ],
    playStream: OggDemuxer {
      _readableState: ReadableState {
        objectMode: true,
        highWaterMark: 16,
        buffer: BufferList {
          head: { data: [Buffer [Uint8Array]], next: [Object] },
          tail: { data: [Buffer [Uint8Array]], next: null },
          length: 314
        },
        length: 314,
        pipes: [],
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: true,
        emitClose: true,
        autoDestroy: true,
        destroyed: true,
        errored: Error: aborted
            at connResetException (node:internal/errors:691:14)
            at TLSSocket.socketCloseListener (node:_http_client:407:19)
            at TLSSocket.emit (node:events:406:35)
            at node:net:672:12
            at TCP.done (node:_tls_wrap:580:7) {
          code: 'ECONNRESET'
        },
        closed: true,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: null
      },
      _events: [Object: null prototype] {
        prefinish: [Function: prefinish],
        close: [ [Function (anonymous)], [Function: onclose] ],
        end: [Function: onend],
        finish: [Function: onfinish],
        error: [Function: onerror]
      },
      _eventsCount: 5,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: true,
        ending: false,
        ended: false,
        finished: false,
        destroyed: true,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 74922,
        writing: true,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: [Function: nop],
        writelen: 74922,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 1,
        constructed: true,
        prefinished: false,
        errorEmitted: true,
        emitClose: true,
        autoDestroy: true,
        errored: Error: aborted
            at connResetException (node:internal/errors:691:14)
            at TLSSocket.socketCloseListener (node:_http_client:407:19)
            at TLSSocket.emit (node:events:406:35)
            at node:net:672:12
            at TCP.done (node:_tls_wrap:580:7) {
          code: 'ECONNRESET'
        },
        closed: true,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      allowHalfOpen: true,
      _remainder: null,
      _head: null,
      _bitstream: null,
      [Symbol(kCapture)]: false,
      [Symbol(kCallback)]: [Function: bound onwrite]
    },
    metadata: {
      message: <ref *3> Message {
        channelId: '741494520532959244',
        guildId: '737909233781047359',
        deleted: false,
        id: '891757482437918721',
        type: 'DEFAULT',
        system: false,
        content: '-p calm and relaxing from hollowknight',
        author: User {
          id: '217497799414120448',
          bot: false,
          system: false,
          flags: UserFlags { bitfield: 0 },
          username: 'Eugene',
          discriminator: '3399',
          avatar: '76b492da32703b1901d88d2bc4342093'
        },
        pinned: false,
        tts: false,
        nonce: null,
        embeds: [],
        components: [],
        attachments: Collection(0) [Map] {},
        stickers: Collection(0) [Map] {},
        createdTimestamp: 1632681951866,
        editedTimestamp: null,
        reactions: ReactionManager { message: [Circular *3] },
        mentions: MessageMentions {
          everyone: false,
          users: Collection(0) [Map] {},
          roles: Collection(0) [Map] {},
          _members: null,
          _channels: null,
          crosspostedChannels: Collection(0) [Map] {},
          repliedUser: null
        },
        webhookId: null,
        groupActivityApplication: null,
        applicationId: null,
        activity: null,
        flags: MessageFlags { bitfield: 0 },
        reference: null,
        interaction: null
      },
      voiceChannel: <ref *5> VoiceChannel {
        type: 'GUILD_VOICE',
        deleted: false,
        guild: <ref *4> Guild {
          id: '737909233781047359',
          name: 'DA WEEPWOOP ZONE',
          icon: '07efaaccaf1ef41dd126dfbcefd5bfd4',
          features: [
            'ANIMATED_ICON',
            'THREE_DAY_THREAD_ARCHIVE',
            'INVITE_SPLASH'
          ],
          commands: GuildApplicationCommandManager {
            permissions: [ApplicationCommandPermissionsManager],
            guild: [Circular *4]
          },
          members: GuildMemberManager { guild: [Circular *4] },
          channels: GuildChannelManager { guild: [Circular *4] },
          bans: GuildBanManager { guild: [Circular *4] },
          roles: RoleManager { guild: [Circular *4] },
          presences: PresenceManager {},
          voiceStates: VoiceStateManager { guild: [Circular *4] },
          stageInstances: StageInstanceManager { guild: [Circular *4] },
          invites: GuildInviteManager { guild: [Circular *4] },
          deleted: false,
          available: true,
          shardId: 0,
          splash: null,
          banner: null,
          description: null,
          verificationLevel: 'LOW',
          vanityURLCode: null,
          nsfwLevel: 'DEFAULT',
          discoverySplash: null,
          memberCount: 48,
          large: false,
          applicationId: null,
          afkTimeout: 300,
          afkChannelId: null,
          systemChannelId: '751236180275888208',
          premiumTier: 'TIER_1',
          premiumSubscriptionCount: 2,
          explicitContentFilter: 'MEMBERS_WITHOUT_ROLES',
          mfaLevel: 'NONE',
          joinedTimestamp: 1631907890871,
          defaultMessageNotifications: 'ALL_MESSAGES',
          systemChannelFlags: SystemChannelFlags { bitfield: 0 },
          maximumMembers: 250000,
          maximumPresences: null,
          approximateMemberCount: null,
          approximatePresenceCount: null,
          vanityURLUses: null,
          rulesChannelId: null,
          publicUpdatesChannelId: null,
          preferredLocale: 'en-US',
          ownerId: '388444768117456906',
          emojis: GuildEmojiManager { guild: [Circular *4] },
          stickers: GuildStickerManager { guild: [Circular *4] }
        },
        guildId: '737909233781047359',
        parentId: '737909234372575255',
        permissionOverwrites: PermissionOverwriteManager { channel: [Circular *5] },
        id: '737909234372575257',
        name: 'the walking alive',
        rawPosition: 0,
        rtcRegion: null,
        bitrate: 93000,
        userLimit: 0
      },
      textChannel: <ref *6> TextChannel {
        type: 'GUILD_TEXT',
        deleted: false,
        guild: <ref *4> Guild {
          id: '737909233781047359',
          name: 'DA WEEPWOOP ZONE',
          icon: '07efaaccaf1ef41dd126dfbcefd5bfd4',
          features: [
            'ANIMATED_ICON',
            'THREE_DAY_THREAD_ARCHIVE',
            'INVITE_SPLASH'
          ],
          commands: GuildApplicationCommandManager {
            permissions: [ApplicationCommandPermissionsManager],
            guild: [Circular *4]
          },
          members: GuildMemberManager { guild: [Circular *4] },
          channels: GuildChannelManager { guild: [Circular *4] },
          bans: GuildBanManager { guild: [Circular *4] },
          roles: RoleManager { guild: [Circular *4] },
          presences: PresenceManager {},
          voiceStates: VoiceStateManager { guild: [Circular *4] },
          stageInstances: StageInstanceManager { guild: [Circular *4] },
          invites: GuildInviteManager { guild: [Circular *4] },
          deleted: false,
          available: true,
          shardId: 0,
          splash: null,
          banner: null,
          description: null,
          verificationLevel: 'LOW',
          vanityURLCode: null,
          nsfwLevel: 'DEFAULT',
          discoverySplash: null,
          memberCount: 48,
          large: false,
          applicationId: null,
          afkTimeout: 300,
          afkChannelId: null,
          systemChannelId: '751236180275888208',
          premiumTier: 'TIER_1',
          premiumSubscriptionCount: 2,
          explicitContentFilter: 'MEMBERS_WITHOUT_ROLES',
          mfaLevel: 'NONE',
          joinedTimestamp: 1631907890871,
          defaultMessageNotifications: 'ALL_MESSAGES',
          systemChannelFlags: SystemChannelFlags { bitfield: 0 },
          maximumMembers: 250000,
          maximumPresences: null,
          approximateMemberCount: null,
          approximatePresenceCount: null,
          vanityURLUses: null,
          rulesChannelId: null,
          publicUpdatesChannelId: null,
          preferredLocale: 'en-US',
          ownerId: '388444768117456906',
          emojis: GuildEmojiManager { guild: [Circular *4] },
          stickers: GuildStickerManager { guild: [Circular *4] }
        },
        guildId: '737909233781047359',
        parentId: '751229266083184641',
        permissionOverwrites: PermissionOverwriteManager { channel: [Circular *6] },
        messages: MessageManager { channel: [Circular *6] },
        threads: ThreadManager { channel: [Circular *6] },
        nsfw: false,
        id: '741494520532959244',
        name: '🎵da-beats🎵',
        rawPosition: 9,
        topic: 'Groovy Bot do be playing some bangers',
        lastMessageId: '891757488037326940',
        lastPinTimestamp: 1602275797567,
        rateLimitPerUser: 0
      },
      songs: [
        {
          url: 'https://youtube.com/watch?v=sZjpMCu2JRc',
          title: 'Calm and Relaxing Music from Hollowknight',
          youtubeurl: true
        }
      ],
      player: <ref *7> AudioPlayer {
        _events: [Object: null prototype] { idle: [Function (anonymous)] },
        _eventsCount: 1,
        _maxListeners: undefined,
        subscribers: [
          PlayerSubscription {
            connection: [VoiceConnection],
            player: [Circular *7]
          }
        ],
        _state: {
          status: 'playing',
          missedFrames: 0,
          playbackDuration: 140720,
          resource: [Circular *8],
          onStreamError: [Function: onStreamError]
        },
        behaviors: { noSubscriber: 'pause', maxMissedFrames: 5 },
        debug: [Function (anonymous)],
        [Symbol(kCapture)]: false
      },
      subscription: <ref *10> PlayerSubscription {
        connection: <ref *9> VoiceConnection {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          debug: null,
          rejoinAttempts: 0,
          receiver: VoiceReceiver {
            voiceConnection: [Circular *9],
            ssrcMap: [SSRCMap],
            speaking: [SpeakingMap],
            subscriptions: Map(0) {},
            connectionData: [Object],
            onWsPacket: [Function: bound onWsPacket],
            onUdpMessage: [Function: bound onUdpMessage]
          },
          onNetworkingClose: [Function: bound onNetworkingClose],
          onNetworkingStateChange: [Function: bound onNetworkingStateChange],
          onNetworkingError: [Function: bound onNetworkingError],
          onNetworkingDebug: [Function: bound onNetworkingDebug],
          _state: {
            status: 'ready',
            adapter: [Object],
            networking: [Networking],
            subscription: [Circular *10]
          },
          packets: { server: [Object], state: [Object] },
          joinConfig: {
            selfDeaf: true,
            selfMute: false,
            group: 'default',
            channelId: '737909234372575257',
            guildId: '737909233781047359',
            adapterCreator: [Function (anonymous)]
          },
          [Symbol(kCapture)]: false
        },
        player: <ref *7> AudioPlayer {
          _events: [Object: null prototype] { idle: [Function (anonymous)] },
          _eventsCount: 1,
          _maxListeners: undefined,
          subscribers: [ [Circular *10] ],
          _state: {
            status: 'playing',
            missedFrames: 0,
            playbackDuration: 140720,
            resource: [Circular *8],
            onStreamError: [Function: onStreamError]
          },
          behaviors: { noSubscriber: 'pause', maxMissedFrames: 5 },
          debug: [Function (anonymous)],
          [Symbol(kCapture)]: false
        }
      },
      currenttitle: 'Calm and Relaxing Music from Hollowknight',
      loop: false
    },
    silencePaddingFrames: 5,
    audioPlayer: <ref *7> AudioPlayer {
      _events: [Object: null prototype] { idle: [Function (anonymous)] },
      _eventsCount: 1,
      _maxListeners: undefined,
      subscribers: [
        <ref *10> PlayerSubscription {
          connection: <ref *9> VoiceConnection {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            debug: null,
            rejoinAttempts: 0,
            receiver: [VoiceReceiver],
            onNetworkingClose: [Function: bound onNetworkingClose],
            onNetworkingStateChange: [Function: bound onNetworkingStateChange],
            onNetworkingError: [Function: bound onNetworkingError],
            onNetworkingDebug: [Function: bound onNetworkingDebug],
            _state: [Object],
            packets: [Object],
            joinConfig: [Object],
            [Symbol(kCapture)]: false
          },
          player: [Circular *7]
        }
      ],
      _state: {
        status: 'playing',
        missedFrames: 0,
        playbackDuration: 140720,
        resource: [Circular *8],
        onStreamError: [Function: onStreamError]
      },
      behaviors: { noSubscriber: 'pause', maxMissedFrames: 5 },
      debug: [Function (anonymous)],
      [Symbol(kCapture)]: false
    }
  }
}